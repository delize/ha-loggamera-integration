name: Code Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Quality Check
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 isort
      
      - name: Check code formatting with Black
        id: black-check
        run: |
          if ! black --check --diff custom_components/; then
            echo "BLACK_FAILED=true" >> $GITHUB_OUTPUT
            echo "‚ùå Black formatting issues found" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "‚úÖ Black formatting passed" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Check import sorting with isort
        id: isort-check
        run: |
          if ! isort --check-only --diff custom_components/; then
            echo "ISORT_FAILED=true" >> $GITHUB_OUTPUT
            echo "‚ùå Import sorting issues found" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "‚úÖ Import sorting passed" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Lint with flake8
        id: flake8-check
        run: |
          if ! flake8 custom_components/ --count --max-complexity=10 --max-line-length=88 --statistics; then
            echo "FLAKE8_FAILED=true" >> $GITHUB_OUTPUT
            echo "‚ùå Flake8 linting issues found" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "‚úÖ Flake8 linting passed" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Comment with auto-fix option
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const fixUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/workflows/auto-fix-code.yaml`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üö® Code Quality Check Failed
              
              Your PR has code formatting or linting issues that need to be addressed.
              
              **View the detailed report:** [Check Run Details](${runUrl})
              
              ### üîß Auto-Fix Available
              
              Would you like to automatically fix these issues? Simply comment on this PR:
              
              **\`/fix-formatting\`**
              
              This will:
              - Format code with Black
              - Sort imports with isort  
              - Fix auto-fixable flake8 issues
              - Commit the changes to your PR branch
              
              **Who can use auto-fix:**
              - üë§ PR author
              - üëë Repository owner  
              - ü§ù Repository collaborators with write access
              
              Or you can fix these issues manually and push the changes.`
            })