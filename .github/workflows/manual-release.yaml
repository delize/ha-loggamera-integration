name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      release_notes:
        description: 'Custom release notes (optional)'
        required: false
        type: string

jobs:
  manual-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.2.3)"
            exit 1
          fi
          echo "Version format is valid: $VERSION"

      - name: Check if version already exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if git tag --list | grep -q "^v$VERSION$"; then
            echo "Error: Version v$VERSION already exists"
            exit 1
          fi
          echo "Version v$VERSION is available"

      - name: Update manifest.json
        run: |
          VERSION="${{ github.event.inputs.version }}"
          python -c "
          import json
          with open('custom_components/loggamera/manifest.json', 'r') as f:
              manifest = json.load(f)
          manifest['version'] = '$VERSION'
          with open('custom_components/loggamera/manifest.json', 'w') as f:
              json.dump(manifest, f, indent=2)
          "
          echo "Updated manifest.json to version $VERSION"

      - name: Commit version update
        run: |
          VERSION="${{ github.event.inputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add custom_components/loggamera/manifest.json
          git commit -m "🔖 Release version $VERSION"
          git push

      - name: Generate release notes
        id: release_notes
        run: |
          VERSION="${{ github.event.inputs.version }}"
          CUSTOM_NOTES="${{ github.event.inputs.release_notes }}"
          PRERELEASE="${{ github.event.inputs.prerelease }}"
          
          # Start release notes
          cat > release_notes.md << 'EOF'
          EOF
          
          if [ "$PRERELEASE" = "true" ]; then
            echo "## 🚧 Pre-release v$VERSION" >> release_notes.md
            echo "" >> release_notes.md
            echo "⚠️ **This is a pre-release version.** It may contain bugs or incomplete features." >> release_notes.md
            echo "" >> release_notes.md
          else
            echo "## 🎉 Release v$VERSION" >> release_notes.md
            echo "" >> release_notes.md
          fi
          
          if [ -n "$CUSTOM_NOTES" ]; then
            echo "$CUSTOM_NOTES" >> release_notes.md
            echo "" >> release_notes.md
          fi
          
          # Add standard installation instructions
          cat >> release_notes.md << 'EOF'
          ## Installation
          
          ### HACS (Recommended)
          1. Go to HACS -> Integrations
          2. Search for "Loggamera"
          3. Click Install
          4. Restart Home Assistant
          
          ### Manual Installation
          1. Download the latest release
          2. Extract to `custom_components/loggamera`
          3. Restart Home Assistant
          
          ## Supported Devices
          - PowerMeter (Electricity meters)
          - RoomSensor (Temperature and humidity sensors)
          - WaterMeter (Water meters)
          - CoolingUnit
          - HeatPump
          
          ## Support
          - [Documentation](https://github.com/delize/home-assistant-loggamera-integration)
          - [Issue Tracker](https://github.com/delize/home-assistant-loggamera-integration/issues)
          - [Diagnostic Tools](https://github.com/delize/home-assistant-loggamera-integration/tree/main/tools)
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          name: "Release v${{ github.event.inputs.version }}"
          body_path: release_notes.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Success notification
        run: |
          VERSION="${{ github.event.inputs.version }}"
          PRERELEASE="${{ github.event.inputs.prerelease }}"
          
          if [ "$PRERELEASE" = "true" ]; then
            echo "🚧 Pre-release v$VERSION created successfully!"
          else
            echo "🎉 Release v$VERSION created successfully!"
          fi
          
          echo "Release URL: https://github.com/delize/home-assistant-loggamera-integration/releases/tag/v$VERSION"